-- local status, saga = pcall(require, "lspsaga")
-- if not status then
-- 	return
-- end
--
-- saga.init_lsp_saga({
-- 	server_filetype_map = {
-- 		typescript = "typescript",
-- 	},
-- })
--
-- local opts = { noremap = true, silent = true }
--
-- vim.keymap.set("n", "gd", "<Cmd>Lspsaga lsp_finder<CR>", opts)
-- vim.keymap.set("n", "<leader>ca", "<cmd>Lspsaga code_action<CR>", opts)
-- vim.keymap.set("v", "<leader>ca", "<cmd><C-U>Lspsaga range_code_action<CR>", opts)
-- vim.keymap.set("n", "<leader>cd", "<cmd>Lspsaga show_line_diagnostics<CR>", opts)
-- vim.keymap.set("n", "<leader>cd", "<cmd>Lspsaga show_cursor_diagnostics<CR>", opts)
-- vim.keymap.set("n", "<C-j>", "<Cmd>Lspsaga diagnostic_jump_next<CR>", opts)
-- vim.keymap.set("n", "K", "<Cmd>Lspsaga hover_doc<CR>", opts)
-- vim.keymap.set("i", "<C-k>", "<Cmd>Lspsaga signature_help<CR>", opts)
-- vim.keymap.set("n", "gp", "<Cmd>Lspsaga preview_definition<CR>", opts)
-- vim.keymap.set("n", "gr", "<Cmd>Lspsaga rename<CR>", opts)
--
-- vim.keymap.set("n", "<A-d>", "<cmd>Lspsaga open_floaterm custom_cli_command<CR>", { silent = true })
-- vim.keymap.set("t", "<A-d>", "<C-\\><C-n><cmd>Lspsaga close_floaterm<CR>", { silent = true })
